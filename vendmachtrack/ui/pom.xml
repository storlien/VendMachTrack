<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>ui</artifactId>
    <packaging>jar</packaging>

    <parent>
        <groupId>gr2338</groupId>
        <artifactId>vendmachtrack</artifactId>
        <version>1.0</version>
    </parent>

    <properties>
        <testResultsDir>${project.basedir}/../test-results/</testResultsDir>
    </properties>

    <dependencies>

        <dependency>
            <groupId>gr2338</groupId>
            <artifactId>core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>gr2338</groupId>
            <artifactId>jsonio</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>

        <!-- javafx -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>19.0.2</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>19.0.2</version>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>5.6.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.testfx</groupId>
            <artifactId>testfx-core</artifactId>
            <version>4.0.16-alpha</version> <!-- use the latest version -->
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testfx</groupId>
            <artifactId>testfx-junit5</artifactId>
            <version>4.0.16-alpha</version> <!-- use the latest version -->
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wiremock</groupId>
            <artifactId>wiremock</artifactId>
            <version>3.2.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>


            <!-- SureFire plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M5</version>
                <configuration>
                    <argLine>
                        ${argLine} --add-opens javafx.graphics/com.sun.javafx.application=ALL-UNNAMED  <!-- for JavaFX Testing -->
                    </argLine>
                    <reportsDirectory>
                        ${testResultsDir}/junit/${project.artifactId}
                    </reportsDirectory>
                </configuration>

            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>

            <!-- SureFire plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M5</version>
                <configuration>
                    <argLine>
                        ${argLine} --add-opens javafx.graphics/com.sun.javafx.application=ALL-UNNAMED
                        <!-- for JavaFX Testing, We need this because we cannot find out the name of the unnamed module-->
                        <!-- if we don't have this the tests will fail. bacause javafx.graphics can't open to the "unnamed module"-->
                    </argLine>
                    <reportsDirectory>
                        ${testResultsDir}/junit/${project.artifactId}
                    </reportsDirectory>
                </configuration>

            </plugin>

            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.8</version>
                <configuration>
                    <mainClass>vendmachtrack.ui/vendmachtrack.ui.App</mainClass>
                </configuration>
            </plugin>

            <!-- Plugin for creating uber JAR to be used with Jpackage -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.5.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <shadedArtifactAttached>true</shadedArtifactAttached>
                            <transformers>
                                <!-- Transformer for the manifest file -->
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>vendmachtrack.ui.Main</mainClass>
                                </transformer>
                                <!-- Transformer for service resources -->
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                            </transformers>
                            <filters>
                                <filter>
                                    <!-- Do not filter out any artifacts -->
                                    <artifact>*:*</artifact>
                                </filter>
                            </filters>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Jpackage plugin -->
            <plugin>
                <groupId>org.panteleyev</groupId>
                <artifactId>jpackage-maven-plugin</artifactId>
                <version>1.6.0</version>
                <configuration>
                    <name>VendMachTrackApp</name>
                    <appVersion>${project.version}</appVersion>
                    <vendor>gr2338</vendor>
                    <input>${project.build.directory}/</input>
                    <mainJar>${project.build.finalName}-shaded.jar</mainJar>
                    <mainClass>vendmachtrack.ui.Main</mainClass>
                    <destination>${project.build.directory}/jpackage/</destination>
                    <javaOptions>
                        <option>-Dfile.encoding=UTF-8</option>
                    </javaOptions>

                    <!-- Linux options -->
                    <linuxShortcut>true</linuxShortcut>
                    <linuxMenuGroup>VendMachTrackApp</linuxMenuGroup>

                    <!-- Windows options -->
                    <winDirChooser>true</winDirChooser>
                    <winShortcut>true</winShortcut>
                    <winMenu>true</winMenu>
                    <winMenuGroup>VendMachTrackApp</winMenuGroup>
                </configuration>
            </plugin>

        </plugins>
    </build>
</project>